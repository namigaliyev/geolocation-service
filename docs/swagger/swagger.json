{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/geolocation-service/geolocations": {
            "get": {
                "description": "Endpoint for getting pageable geolocations data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geolocation-handler"
                ],
                "summary": "Endpoint for getting geolocations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (offset)",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (limit)",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Exception"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Exception"
                        }
                    }
                }
            }
        },
        "/api/geolocation-service/geolocations/{ipAddress}": {
            "get": {
                "description": "Endpoint for getting geolocation  by given ip address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geolocation-handler"
                ],
                "summary": "Endpoint for getting geolocation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ip address",
                        "name": "ipAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Geolocation"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Exception"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Exception"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "health-handler"
                ],
                "summary": "Health endpoint for kubernetes health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        },
        "/readiness": {
            "get": {
                "tags": [
                    "health-handler"
                ],
                "summary": "Readiness endpoint for kubernetes readiness check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": ""
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Exception": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "checks": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "code": {
                    "type": "string"
                },
                "httpCode": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.Geolocation": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ipAddress": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "mysteryValue": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.PageResponse": {
            "type": "object",
            "properties": {
                "hasNextPage": {
                    "type": "boolean"
                },
                "items": {},
                "totalPageCount": {
                    "type": "integer"
                }
            }
        }
    }
}